package it.unipv.se2.tmtkt.model;
// Generated Jan 15, 2014 2:28:27 PM by Hibernate Tools 3.4.0.CR1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * UserCategory generated by hbm2java
 */
@Entity
@Table(name="USER_CATEGORY"
    , uniqueConstraints = @UniqueConstraint(columnNames="DESCRIPTION") 
)
public class UserCategory  implements java.io.Serializable {


     private short userCategoryId;
     private String description;
     private Set<PriceScheme> priceSchemes = new HashSet<PriceScheme>(0);
     private Set<User> users = new HashSet<User>(0);

    public UserCategory() {
    }

	
    public UserCategory(short userCategoryId, String description) {
        this.userCategoryId = userCategoryId;
        this.description = description;
    }
    public UserCategory(short userCategoryId, String description, Set<PriceScheme> priceSchemes, Set<User> users) {
       this.userCategoryId = userCategoryId;
       this.description = description;
       this.priceSchemes = priceSchemes;
       this.users = users;
    }
   
     @Id 

    
    @Column(name="USER_CATEGORY_id", unique=true, nullable=false)
    public short getUserCategoryId() {
        return this.userCategoryId;
    }
    
    public void setUserCategoryId(short userCategoryId) {
        this.userCategoryId = userCategoryId;
    }

    
    @Column(name="DESCRIPTION", unique=true, nullable=false, length=45)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userCategory")
    public Set<PriceScheme> getPriceSchemes() {
        return this.priceSchemes;
    }
    
    public void setPriceSchemes(Set<PriceScheme> priceSchemes) {
        this.priceSchemes = priceSchemes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userCategory")
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }




}


